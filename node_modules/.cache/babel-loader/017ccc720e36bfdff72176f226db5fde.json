{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\BAZRA\\\\Desktop\\\\Bazra project\\\\project react js\\\\dashix\\\\src\\\\pages\\\\SignupA.js\";\nimport React from \"react\";\nimport { useState, useEffect, useMemo, useRef } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { useHistory } from \"react-router-dom\";\nimport PhoneInput from \"react-phone-number-input\";\nimport \"react-phone-number-input/style.css\";\nimport \"../components/FontawsomeIcons\";\nimport scrollreveal from \"scrollreveal\";\nimport { Form, Button } from 'semantic-ui-react';\nimport swal from 'sweetalert';\nimport { useForm } from \"react-hook-form\";\nimport \"./Form1.css\";\nimport { faEye } from \"@fortawesome/free-solid-svg-icons\";\nconst eye = /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n  icon: faEye,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 13\n  }\n});\n\nconst SignupA = () => {\n  const togglePasswordVisiblity = () => {\n    setPasswordShown(passwordShown ? false : true);\n  };\n\n  const [passwordShown, setPasswordShown] = useState(false);\n  const {\n    register,\n    handleSubmit,\n    watch,\n    formState: {\n      errors\n    }\n  } = useForm();\n\n  const onSubmit = data => {\n    console.log(data);\n    handleClick();\n  };\n\n  const passwordx = useRef({});\n  passwordx.current = watch(\"passwordx\", \"\");\n  useEffect(() => {\n    const sr = scrollreveal({\n      origin: \"top\",\n      distance: \"80px\",\n      duration: 2000,\n      reset: false\n    });\n    sr.reveal(`\n      .form-container \n    `, {\n      opacity: 0,\n      interval: 100\n    });\n  }, []);\n  const history = useHistory();\n\n  const login = () => {\n    history.push(\"/ver\");\n  };\n\n  const [agree, setAgree] = useState(false);\n  const [firstName, setFirst_Name] = useState(\"\");\n  const [lastName, setLast_Name] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [confirmPassword, setRe_password] = useState(\"\");\n  const [companyName, setCompanyName] = useState(\"\");\n  const [businessLNum, setBusinessLNum] = useState(\"\");\n  const [licenceNumber, setLicenceNumber] = useState(\"\");\n  const [role, setRole] = useState(\"\");\n  const [phone, setPhone] = useState();\n  const [app_user, setApp_user] = useState([]);\n  const [username, setUsername] = useState(\"\");\n\n  const handleClick = e => {\n    signupxx();\n\n    const checkboxHandler = () => {// if agree === true, it will be set to false\n      // if agree === false, it will be set to true\n      // Don't miss the exclamation mark\n    };\n\n    async function signupxx() {\n      console.warn(username.password);\n      const userinfo = {\n        businessLNum,\n        confirmPassword,\n        companyName,\n        email,\n        firstName,\n        licenceNumber,\n        lastName,\n        password,\n        username\n      };\n      let item = {\n        businessLNum,\n        confirmPassword,\n        companyName,\n        email,\n        firstName,\n        licenceNumber,\n        lastName,\n        password,\n        username\n      };\n      const options = {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          \"Accept\": \"application/json\"\n        },\n        body: JSON.stringify(item)\n      };\n      const url = \"http://ec2-3-85-27-213.compute-1.amazonaws.com:8080/api/signup/agent\";\n\n      try {\n        const response = await fetch(url, options);\n        const result = await response.json();\n        console.log(result);\n        localStorage.setItem(\"user-info\", JSON.stringify(result));\n        localStorage.setItem('message', JSON.stringify(result['message']));\n        const mess = localStorage.getItem('message');\n\n        if (response.ok) {\n          console.log(\"Signup successful\");\n          swal(\"Successful\", \"Welcom\", \"success\", {\n            buttons: false,\n            timer: 2000\n          });\n          history.push(\"/loginm\");\n        } else {\n          console.log(\"failed\");\n          swal(\"Error\", \"Faild to signup\", \"error\");\n        }\n      } catch (error) {\n        console.error(error);\n      }\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: 'flex',\n      justifyContent: 'center',\n      alignItems: 'center',\n      height: '90vh'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-containerxx\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    className: \"form\",\n    onSubmit: handleSubmit(onSubmit),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 1\n    }\n  }, \"Agent Sign Up\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-inputs\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    className: \"form-labelx\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 13\n    }\n  }, \"Phone Numer\"), /*#__PURE__*/React.createElement(PhoneInput, Object.assign({\n    international: true,\n    countryCallingCodeEditable: true,\n    placeholder: \"Enter your Phone Number\",\n    type: \"text\",\n    name: \"phonex\",\n    value: username\n  }, register(\"phonex\", {\n    required: {\n      value: true,\n      message: \"Please Enter your Phone number\"\n    },\n    minLength: {\n      value: 10,\n      message: \" must have at least 10 characters\"\n    }\n  }), {\n    onChange: setUsername,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 13\n    }\n  })), errors.phonex && /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 19\n    }\n  }, errors.phonex.message)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-inputs\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n    icon: \"globe\",\n    className: \"fa\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    className: \"form-labelx\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 13\n    }\n  }, \"Company Name\"), /*#__PURE__*/React.createElement(\"input\", Object.assign({\n    className: \"form-input\",\n    type: \"text\",\n    name: \"first_name\",\n    placeholder: \"Enter your Company Name\"\n  }, register(\"countryx\", {\n    required: {\n      value: true,\n      maxLength: 30,\n      message: \"Please Enter Company Name\"\n    },\n    pattern: {\n      value: /[A-Za-z]+$/,\n      message: \"Only Letters\"\n    },\n    pattern: {\n      value: /[A-Za-z]+$/,\n      message: \"Only Letters\"\n    }\n  }), {\n    value: companyName,\n    onChange: e => setCompanyName(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 1\n    }\n  })), \"   \", errors.countryx && /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 26\n    }\n  }, errors.countryx.message)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-inputs\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n    icon: \"user\",\n    className: \"fa\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    className: \"form-labelx\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 13\n    }\n  }, \"First Name\"), /*#__PURE__*/React.createElement(\"input\", Object.assign({\n    className: \"form-input\",\n    type: \"text\",\n    name: \"first_name\",\n    placeholder: \"Enter your First name\",\n    value: firstName\n  }, register(\"First\", {\n    required: {\n      value: true,\n      message: \"Please enter your First Name\"\n    },\n    pattern: {\n      value: /[A-Za-z]+$/,\n      message: \"Only Letters\"\n    },\n    pattern: {\n      value: /^[A-Z][a-z]+[,.'-]?(?: [A-Z][a-z]+[,.'-]?)*$/,\n      message: \"start with uppercase\"\n    },\n    minLength: {\n      value: 2,\n      message: \" must have at least 2 characters\"\n    }\n  }), {\n    onChange: e => setFirst_Name(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 13\n    }\n  })), errors.First && /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 247,\n      columnNumber: 34\n    }\n  }, errors.First.message)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-inputs\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 250,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n    icon: \"user\",\n    className: \"fa\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    className: \"form-labelx\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 252,\n      columnNumber: 13\n    }\n  }, \"Last Name\"), /*#__PURE__*/React.createElement(\"input\", Object.assign({\n    className: \"form-input\",\n    type: \"text\",\n    name: \"last_name\",\n    placeholder: \"Enter your Last name\",\n    value: lastName\n  }, register(\"Last\", {\n    required: {\n      value: true,\n      message: \"Please enter your Last Name\"\n    },\n    minLength: {\n      value: 2,\n      message: \" must have at least 2 characters\"\n    },\n    pattern: {\n      value: /[A-Za-z]+$/,\n      message: \"Only Letters\"\n    },\n    pattern: {\n      value: /^[A-Z][a-z]+[,.'-]?(?: [A-Z][a-z]+[,.'-]?)*$/,\n      message: \"start with uppercase\"\n    }\n  }), {\n    onChange: e => setLast_Name(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 254,\n      columnNumber: 13\n    }\n  })), errors.Last && /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 284,\n      columnNumber: 30\n    }\n  }, errors.Last.message)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-inputs\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 286,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n    icon: \"envelope\",\n    className: \"fa\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 287,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    className: \"form-labelx\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 288,\n      columnNumber: 13\n    }\n  }, \"Email\"), /*#__PURE__*/React.createElement(\"input\", Object.assign({\n    className: \"form-input\",\n    type: \"email\",\n    name: \"email\",\n    placeholder: \"Enter your email\"\n  }, register(\"email\", {\n    required: {\n      value: true,\n      message: \"Please enter your email address\"\n    },\n    pattern: {\n      value: /^(([^<>()[\\]\\\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/,\n      message: \"Invalid email address\"\n    }\n  }), {\n    value: email,\n    onChange: e => setEmail(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 289,\n      columnNumber: 13\n    }\n  })), errors.email && /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 308,\n      columnNumber: 38\n    }\n  }, errors.email.message)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-inputs\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 311,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"form-input-icon\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 312,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n    icon: \"calendar\",\n    className: \"fa\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 313,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(\"label\", {\n    className: \"form-labelx\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 316,\n      columnNumber: 13\n    }\n  }, \"Business Number\"), /*#__PURE__*/React.createElement(\"input\", Object.assign({\n    type: \"text\",\n    className: \"form-input\",\n    placeholder: \"Enter Business Number\",\n    value: businessLNum\n  }, register(\"user\", {\n    required: true,\n    maxLength: 30\n  }), {\n    onChange: e => setBusinessLNum(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 317,\n      columnNumber: 13\n    }\n  })), errors.user && /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 326,\n      columnNumber: 30\n    }\n  }, \"Business Number is Required\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-inputs\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 330,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n    icon: \"user\",\n    className: \"fa\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 331,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    className: \"form-labelx\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 332,\n      columnNumber: 13\n    }\n  }, \"Licence Number\"), /*#__PURE__*/React.createElement(\"input\", Object.assign({\n    className: \"form-input\",\n    type: \"text\",\n    name: \"gender\",\n    placeholder: \"Enter your Licence Number\",\n    value: licenceNumber\n  }, register(\"user\", {\n    required: true,\n    maxLength: 30\n  }), {\n    onChange: e => setLicenceNumber(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 334,\n      columnNumber: 13\n    }\n  })), errors.user && /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 343,\n      columnNumber: 34\n    }\n  }, \"Licence Number is Required\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-inputs\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 347,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n    icon: \"lock\",\n    className: \"fa\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 348,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    className: \"form-labelx\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 349,\n      columnNumber: 13\n    }\n  }, \"Password\"), /*#__PURE__*/React.createElement(\"input\", Object.assign({\n    className: \"form-input\",\n    name: \"passwordx\",\n    placeholder: \"Enter your Password\",\n    type: passwordShown ? \"text\" : \"password\"\n  }, register(\"passwordx\", {\n    required: \"You must specify a password\",\n    minLength: {\n      value: 8,\n      message: \"Password must have at least 8 characters\"\n    },\n    pattern: {\n      value: /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)[a-zA-Z\\d]{8,}$/,\n      message: \"at least one uppercase letter, one lowercase letter and one number\"\n    }\n  }), {\n    onChange: e => setPassword(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 350,\n      columnNumber: 13\n    }\n  })), \" \", /*#__PURE__*/React.createElement(\"i\", {\n    onClick: togglePasswordVisiblity,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 370,\n      columnNumber: 16\n    }\n  }, eye), errors.passwordx && /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 371,\n      columnNumber: 37\n    }\n  }, errors.passwordx.message)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-inputs\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 374,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n    icon: \"lock\",\n    className: \"fa\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 375,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    className: \"form-labelx\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 376,\n      columnNumber: 13\n    }\n  }, \"Confirm Password\"), /*#__PURE__*/React.createElement(\"input\", Object.assign({\n    className: \"form-input\",\n    name: \"password_repeat\",\n    placeholder: \"Confirm your Password\",\n    type: passwordShown ? \"text\" : \"password\"\n  }, register(\"password_repeat\", {\n    validate: value => value === passwordx.current || \"The passwords do not match\"\n  }), {\n    onChange: e => setRe_password(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 377,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(\"i\", {\n    onClick: togglePasswordVisiblity,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 389,\n      columnNumber: 14\n    }\n  }, eye), errors.password_repeat && /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 390,\n      columnNumber: 42\n    }\n  }, errors.password_repeat.message)), /*#__PURE__*/React.createElement(Button, {\n    className: \"form-input-btncc\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 393,\n      columnNumber: 9\n    }\n  }, \"Sign up\"), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"form-input-login\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 397,\n      columnNumber: 9\n    }\n  }, \"Already have an account? Login \", /*#__PURE__*/React.createElement(\"a\", {\n    href: \"/logina\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 398,\n      columnNumber: 44\n    }\n  }, \"here\")))));\n};\n\nexport default SignupA;","map":{"version":3,"sources":["C:/Users/BAZRA/Desktop/Bazra project/project react js/dashix/src/pages/SignupA.js"],"names":["React","useState","useEffect","useMemo","useRef","FontAwesomeIcon","useHistory","PhoneInput","scrollreveal","Form","Button","swal","useForm","faEye","eye","SignupA","togglePasswordVisiblity","setPasswordShown","passwordShown","register","handleSubmit","watch","formState","errors","onSubmit","data","console","log","handleClick","passwordx","current","sr","origin","distance","duration","reset","reveal","opacity","interval","history","login","push","agree","setAgree","firstName","setFirst_Name","lastName","setLast_Name","email","setEmail","password","setPassword","confirmPassword","setRe_password","companyName","setCompanyName","businessLNum","setBusinessLNum","licenceNumber","setLicenceNumber","role","setRole","phone","setPhone","app_user","setApp_user","username","setUsername","e","signupxx","checkboxHandler","warn","userinfo","item","options","method","headers","body","JSON","stringify","url","response","fetch","result","json","localStorage","setItem","mess","getItem","ok","buttons","timer","error","display","justifyContent","alignItems","height","required","value","message","minLength","phonex","maxLength","pattern","target","countryx","First","Last","user","validate","password_repeat"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { useState, useEffect, useMemo  ,useRef } from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport PhoneInput from \"react-phone-number-input\";\r\nimport \"react-phone-number-input/style.css\";\r\nimport \"../components/FontawsomeIcons\";\r\nimport scrollreveal from \"scrollreveal\";\r\nimport { Form, Button } from 'semantic-ui-react';\r\nimport swal from 'sweetalert';\r\nimport { useForm } from \"react-hook-form\";\r\nimport \"./Form1.css\";\r\nimport { faEye } from \"@fortawesome/free-solid-svg-icons\";\r\nconst eye = <FontAwesomeIcon icon={faEye} />;\r\nconst SignupA = () => {\r\n  const togglePasswordVisiblity = () => {\r\n    setPasswordShown(passwordShown ? false : true);\r\n  };\r\n  const [passwordShown, setPasswordShown] = useState(false);\r\n  const { register, handleSubmit, watch,formState: { errors } } = useForm();\r\n    const onSubmit = (data) => {\r\n        console.log(data);\r\n        handleClick()\r\n       }\r\n       const passwordx = useRef({});\r\n       passwordx.current = watch(\"passwordx\", \"\");\r\n\r\n  useEffect(() => {\r\n    const sr = scrollreveal({\r\n      origin: \"top\",\r\n      distance: \"80px\",\r\n      duration: 2000,\r\n      reset: false,\r\n    });\r\n    sr.reveal(\r\n      `\r\n      .form-container \r\n    `,\r\n      {\r\n        opacity: 0,\r\n        interval: 100,\r\n      }\r\n    );\r\n  }, []);\r\n\r\n  const history = useHistory();\r\n\r\n  const login = () => {\r\n    history.push(\"/ver\");\r\n  };\r\n  const [agree, setAgree] = useState(false);\r\n  const [firstName, setFirst_Name] = useState(\"\");\r\n  const [lastName, setLast_Name] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [confirmPassword, setRe_password] = useState(\"\");\r\n  const [companyName, setCompanyName] = useState(\"\");\r\n  const [businessLNum, setBusinessLNum] = useState(\"\");\r\n  const [licenceNumber, setLicenceNumber] = useState(\"\");\r\n  const [role, setRole] = useState(\"\");\r\n  const [phone, setPhone] = useState();\r\n  const [app_user, setApp_user] = useState([]);\r\n  const [username , setUsername] = useState(\"\");\r\n\r\n  const handleClick = (e) => {\r\n   \r\n    signupxx()\r\n  \r\n    \r\n    \r\n  const checkboxHandler = () => {\r\n    // if agree === true, it will be set to false\r\n    // if agree === false, it will be set to true\r\n    // Don't miss the exclamation mark\r\n  };\r\n  async function signupxx(){\r\n \r\n    console.warn(username.password)\r\n    const userinfo = {\r\n      businessLNum,\r\n      confirmPassword,\r\n      companyName,\r\n      email,\r\n      firstName,\r\n      licenceNumber,\r\n      lastName,\r\n      password,\r\n      username,\r\n     \r\n     \r\n    \r\n    };\r\n   \r\n    let item={businessLNum,\r\n      confirmPassword,\r\n     companyName,\r\n      email,\r\n      firstName,\r\n      licenceNumber,\r\n      lastName,\r\n      password,\r\n      username,};\r\n   const options={\r\n        method:'POST',\r\n        headers:{\r\n  \r\n            'Content-Type':'application/json',\r\n            \"Accept\":\"application/json\",\r\n           \r\n           \r\n        },\r\n        body:JSON.stringify(item)\r\n        \r\n    }\r\n    const url =(\"http://ec2-3-85-27-213.compute-1.amazonaws.com:8080/api/signup/agent\")\r\n    try{\r\n     const response= await fetch(url,options);\r\n      const result =await response.json();\r\n     console.log(result);\r\n      localStorage.setItem(\"user-info\",JSON.stringify(result))\r\n      localStorage.setItem('message', JSON.stringify(result['message']))\r\n       const mess= localStorage.getItem('message')\r\n      if(response.ok){\r\n        console.log(\"Signup successful\")\r\n        swal(\"Successful\", \"Welcom\", \"success\", {\r\n          buttons: false,\r\n          timer: 2000,\r\n        })\r\n        history.push(\"/loginm\")\r\n      }else{\r\n        console.log(\"failed\")\r\n      swal( \"Error\", \"Faild to signup\", \"error\")\r\n      }\r\n      }catch(error) {\r\n        console.error(error);\r\n      }\r\n    }\r\n  }\r\n\r\n  return (\r\n    \r\n    <div\r\n      style={{\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        height: '90vh'\r\n      }}\r\n    >\r\n      \r\n        <div className='form-containerxx'>\r\n      \r\n\r\n    <form className=\"form\" onSubmit={handleSubmit(onSubmit)}>\r\n<h1>Agent Sign Up</h1>\r\n\r\n        <div className=\"form-inputs\">\r\n            <label className=\"form-labelx\">Phone Numer</label>\r\n            <PhoneInput\r\n              international\r\n              countryCallingCodeEditable={true}\r\n              placeholder=\"Enter your Phone Number\"\r\n              type=\"text\"\r\n              name=\"phonex\"\r\n              value={username}\r\n              {...register(\"phonex\", {\r\n                required: {\r\n                  value: true,\r\n                  message: \"Please Enter your Phone number\",\r\n                },\r\n                minLength: {\r\n                  value: 10,\r\n                  message: \" must have at least 10 characters\"\r\n                      },\r\n              })}\r\n            \r\n              onChange={setUsername}\r\n             \r\n            />\r\n\r\n{errors.phonex && <p >{errors.phonex.message}</p>}\r\n          </div>\r\n          \r\n          <div className=\"form-inputs\">\r\n            {/* country */}\r\n            <FontAwesomeIcon icon=\"globe\" className=\"fa\" />\r\n            <label className=\"form-labelx\">Company Name</label>\r\n     \r\n\r\n<input\r\n  className=\"form-input\"\r\n  type=\"text\"\r\n  name=\"first_name\"\r\n  placeholder=\"Enter your Company Name\"\r\n\r\n  {...register(\"countryx\", { required: { value: true, maxLength: 30,message: \"Please Enter Company Name\",},\r\n  \r\n                pattern: {\r\n                  value:\r\n                  /[A-Za-z]+$/,\r\n                  message: \"Only Letters\",\r\n                },\r\n  pattern: {\r\n    value:\r\n    /[A-Za-z]+$/,\r\n    message: \"Only Letters\",\r\n  }, },)}\r\n  value={companyName}\r\n  onChange={(e) => setCompanyName(e.target.value)}\r\n \r\n/>   {errors.countryx && <p >{errors.countryx.message}</p>}\r\n          </div>\r\n         \r\n          <div className=\"form-inputs\">\r\n            <FontAwesomeIcon icon=\"user\" className=\"fa\" />\r\n            <label className=\"form-labelx\">First Name</label>\r\n\r\n            <input\r\n              className=\"form-input\"\r\n              type=\"text\"\r\n              name=\"first_name\"\r\n              placeholder=\"Enter your First name\"\r\n              value={firstName}\r\n              {...register(\"First\", {\r\n                required: {\r\n                  value: true,\r\n                  message: \"Please enter your First Name\",\r\n                },\r\n                pattern: {\r\n                  value:\r\n                  /[A-Za-z]+$/,\r\n                  message: \"Only Letters\",\r\n                },\r\n                \r\n                pattern: {\r\n                  value:\r\n                  /^[A-Z][a-z]+[,.'-]?(?: [A-Z][a-z]+[,.'-]?)*$/,\r\n                  message: \"start with uppercase\",\r\n                },\r\n                minLength: {\r\n                  value: 2,\r\n                  message: \" must have at least 2 characters\"\r\n                      },\r\n              })}\r\n              onChange={(e) => setFirst_Name(e.target.value)}\r\n            />\r\n                {errors.First && <p >{errors.First.message}</p>}\r\n          </div>\r\n  \r\n          <div className=\"form-inputs\">\r\n            <FontAwesomeIcon icon=\"user\" className=\"fa\" />\r\n            <label className=\"form-labelx\">Last Name</label>\r\n\r\n            <input\r\n              className=\"form-input\"\r\n              type=\"text\"\r\n              name=\"last_name\"\r\n              placeholder=\"Enter your Last name\"\r\n              value={lastName}\r\n              {...register(\"Last\", {\r\n                required: {\r\n                  value: true,\r\n                  message: \"Please enter your Last Name\",\r\n                },\r\n                minLength: {\r\n                  value: 2,\r\n                  message: \" must have at least 2 characters\"\r\n                      },\r\n                      pattern: {\r\n                        value:\r\n                        /[A-Za-z]+$/,\r\n                        message: \"Only Letters\",\r\n                      },\r\n                      \r\n                \r\n                pattern: {\r\n                  value:\r\n                  /^[A-Z][a-z]+[,.'-]?(?: [A-Z][a-z]+[,.'-]?)*$/,\r\n                  message: \"start with uppercase\",\r\n                },\r\n              })}\r\n              onChange={(e) => setLast_Name(e.target.value)}\r\n            />\r\n             {errors.Last && <p >{errors.Last.message}</p>}\r\n          </div>\r\n          <div className=\"form-inputs\">\r\n            <FontAwesomeIcon icon=\"envelope\" className=\"fa\" />\r\n            <label className=\"form-labelx\">Email</label>\r\n            <input\r\n              className=\"form-input\"\r\n              type=\"email\"\r\n              name=\"email\"\r\n              placeholder=\"Enter your email\"\r\n              {...register(\"email\", {\r\n                required: {\r\n                  value: true,\r\n                  message: \"Please enter your email address\",\r\n                },\r\n                pattern: {\r\n                  value:\r\n                    /^(([^<>()[\\]\\\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/,\r\n                  message: \"Invalid email address\",\r\n                },\r\n              })}\r\n              value={email}\r\n              onChange={(e) => setEmail(e.target.value)}\r\n            />\r\n                    {errors.email && <p >{errors.email.message}</p>}\r\n          </div>\r\n  \r\n          <div className=\"form-inputs\">\r\n            <span className=\"form-input-icon\">\r\n              <FontAwesomeIcon icon=\"calendar\" className=\"fa\" />\r\n            </span>\r\n\r\n            <label className=\"form-labelx\">Business Number</label>\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-input\"\r\n              placeholder=\"Enter Business Number\"\r\n              value={businessLNum}\r\n              {...register(\"user\", { required: true, maxLength: 30 })}\r\n              onChange={(e) => setBusinessLNum(e.target.value)}\r\n             \r\n            />\r\n             {errors.user && <p >Business Number is Required</p>}\r\n          </div>\r\n         \r\n          \r\n          <div className=\"form-inputs\">\r\n            <FontAwesomeIcon icon=\"user\" className=\"fa\" />\r\n            <label className=\"form-labelx\">Licence Number</label>\r\n\r\n            <input\r\n              className=\"form-input\"\r\n              type=\"text\"\r\n              name=\"gender\"\r\n              placeholder=\"Enter your Licence Number\"\r\n              value={licenceNumber}\r\n              {...register(\"user\", { required: true, maxLength: 30 })}\r\n              onChange={(e) => setLicenceNumber(e.target.value)}\r\n            />\r\n                 {errors.user && <p >Licence Number is Required</p>}\r\n          </div>\r\n          \r\n         \r\n          <div className=\"form-inputs\">\r\n            <FontAwesomeIcon icon=\"lock\" className=\"fa\" />\r\n            <label className=\"form-labelx\">Password</label>\r\n            <input\r\n              className=\"form-input\"\r\n              name=\"passwordx\"\r\n              placeholder=\"Enter your Password\"\r\n              type={passwordShown ? \"text\" : \"password\"}\r\n              {...register(\"passwordx\",{\r\n                required: \"You must specify a password\",\r\n               minLength: {\r\n            value: 8,\r\n            message: \"Password must have at least 8 characters\"\r\n                }\r\n                ,\r\n                pattern: {\r\n                  value:\r\n                    /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)[a-zA-Z\\d]{8,}$/,\r\n                  message: \"at least one uppercase letter, one lowercase letter and one number\",\r\n                }\r\n                ,})}\r\n             \r\n              onChange={(e) => setPassword(e.target.value)}\r\n            /> <i onClick={togglePasswordVisiblity}>{eye}</i>\r\n               {errors.passwordx && <p>{errors.passwordx.message}</p>}\r\n          </div>\r\n     \r\n          <div className=\"form-inputs\">\r\n            <FontAwesomeIcon icon=\"lock\" className=\"fa\" />\r\n            <label className=\"form-labelx\">Confirm Password</label>\r\n            <input\r\n                className=\"form-input\"\r\n                name=\"password_repeat\"\r\n                placeholder=\"Confirm your Password\"\r\n                type={passwordShown ? \"text\" : \"password\"}\r\n                 {...register(\"password_repeat\",{ validate: value =>\r\n                    value === passwordx.current || \"The passwords do not match\"\r\n                  })}\r\n            \r\n                  onChange={(e) =>  setRe_password(e.target.value)}\r\n                 \r\n            />\r\n             <i onClick={togglePasswordVisiblity}>{eye}</i>\r\n              {errors.password_repeat && <p >{ errors.password_repeat.message}</p>}\r\n          </div>\r\n         \r\n        <Button className=\"form-input-btncc\"  \r\n           >\r\n        Sign up\r\n        </Button>\r\n        <span className=\"form-input-login\">\r\n            Already have an account? Login <a href=\"/logina\">here</a>\r\n          </span>\r\n        </form>\r\n       \r\n      </div>\r\n      \r\n     \r\n    </div>\r\n    \r\n    \r\n    \r\n  );\r\n};\r\n\r\nexport default SignupA;\r\n"]},"metadata":{},"sourceType":"module"}