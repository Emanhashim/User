{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\BAZRA\\\\Desktop\\\\Bazra project\\\\project react js\\\\dashix\\\\src\\\\pages\\\\signup.js\";\nimport React from \"react\";\nimport { useState, useEffect, useMemo, useRef } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { useHistory } from \"react-router-dom\";\nimport PhoneInput from \"react-phone-number-input\";\nimport \"react-phone-number-input/style.css\";\nimport \"../components/FontawsomeIcons\";\nimport scrollreveal from \"scrollreveal\";\nimport { Form, Button } from 'semantic-ui-react';\nimport swal from 'sweetalert';\nimport { useForm } from \"react-hook-form\";\nimport \"./Form1.css\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport Visibility from \"@material-ui/icons/Visibility\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\nimport VisibilityOff from \"@material-ui/icons/VisibilityOff\";\nimport Input from \"@material-ui/core/Input\";\n\nconst Signup = () => {\n  const [values, setValues] = React.useState({\n    password: \"\",\n    showPassword: false\n  });\n\n  const handleClickShowPassword = () => {\n    setValues({ ...values,\n      showPassword: !values.showPassword\n    });\n  };\n\n  const handleMouseDownPassword = event => {\n    event.preventDefault();\n  };\n\n  const handlePasswordChange = prop => event => {\n    setValues({ ...values,\n      [prop]: event.target.value\n    });\n  };\n\n  const {\n    register,\n    handleSubmit,\n    watch,\n    formState: {\n      errors\n    }\n  } = useForm();\n\n  const onSubmit = data => {\n    console.log(data);\n    handleClick();\n  };\n\n  const passwordx = useRef({});\n  passwordx.current = watch(\"passwordx\", \"\");\n  useEffect(() => {\n    const sr = scrollreveal({\n      origin: \"top\",\n      distance: \"80px\",\n      duration: 2000,\n      reset: false\n    });\n    sr.reveal(`\n      .form-container \n    `, {\n      opacity: 0,\n      interval: 100\n    });\n  }, []);\n  const history = useHistory();\n\n  const login = () => {\n    history.push(\"/ver\");\n  };\n\n  const [agree, setAgree] = useState(false);\n  const [firstName, setFirst_Name] = useState(\"\");\n  const [lastName, setLast_Name] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [confirmPassword, setRe_password] = useState(\"\");\n  const [country, setCountry] = useState(\"\");\n  const [birthDay, setBirth] = useState(\"\");\n  const [gender, setGender] = useState(\"\");\n  const [role, setRole] = useState(\"\");\n  const [phone, setPhone] = useState();\n  const [app_user, setApp_user] = useState([]);\n  const [username, setUsername] = useState(\"\");\n\n  const handleClick = e => {\n    signupxx();\n\n    const checkboxHandler = () => {// if agree === true, it will be set to false\n      // if agree === false, it will be set to true\n      // Don't miss the exclamation mark\n    };\n\n    async function signupxx() {\n      console.warn(username.password);\n      const userinfo = {\n        birthDay,\n        confirmPassword,\n        country,\n        email,\n        firstName,\n        gender,\n        lastName,\n        password,\n        username\n      };\n      let item = {\n        birthDay,\n        confirmPassword,\n        country,\n        email,\n        firstName,\n        gender,\n        lastName,\n        password,\n        username\n      };\n      const options = {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          \"Accept\": \"application/json\"\n        },\n        body: JSON.stringify(item)\n      };\n      const url = \"http://localhost:8080/api/signup/user\";\n\n      try {\n        const response = await fetch(url, options);\n        const result = await response.json();\n        console.log(result);\n        localStorage.setItem(\"user-info\", JSON.stringify(result));\n\n        if (response.ok) {\n          console.log(\"Signup successful\");\n          swal(\"Successful\", \"Welcom\", \"success\", {\n            buttons: false,\n            timer: 2000\n          });\n          history.push(\"/login\");\n        } else {\n          console.log(\"failed\");\n          swal(\"Failed To Signup\", \"Error\", \"error\");\n        }\n      } catch (error) {\n        console.error(error);\n      }\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: 'flex',\n      justifyContent: 'center',\n      alignItems: 'center',\n      height: '90vh'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-containerxx\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    className: \"form\",\n    onSubmit: handleSubmit(onSubmit),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-inputs\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    className: \"form-labelx\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 13\n    }\n  }, \"Phone Numer\"), /*#__PURE__*/React.createElement(PhoneInput, Object.assign({\n    international: true,\n    countryCallingCodeEditable: true,\n    type: \"text\",\n    name: \"phonex\",\n    value: username\n  }, register(\"phonex\", {\n    required: {\n      value: true,\n      message: \"Please Enter your Phone number\"\n    },\n    minLength: {\n      value: 10,\n      message: \" must have at least 10 characters\"\n    }\n  }), {\n    onChange: setUsername,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 13\n    }\n  })), errors.phonex && /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 19\n    }\n  }, errors.phonex.message)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-inputs\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n    icon: \"globe\",\n    className: \"fa\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    className: \"form-labelx\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 13\n    }\n  }, \"Country List\"), /*#__PURE__*/React.createElement(\"input\", Object.assign({\n    className: \"form-input\",\n    type: \"text\",\n    name: \"first_name\",\n    placeholder: \"Enter your Country\"\n  }, register(\"countryx\", {\n    required: {\n      value: true,\n      maxLength: 30,\n      message: \"Please Enter Country\"\n    },\n    pattern: {\n      value: /[A-Za-z]+$/,\n      message: \"Only Letters\"\n    }\n  }), {\n    value: country,\n    onChange: e => setCountry(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 1\n    }\n  })), \"   \", errors.countryx && /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 26\n    }\n  }, errors.countryx.message)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-inputs\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n    icon: \"user\",\n    className: \"fa\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    className: \"form-labelx\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 13\n    }\n  }, \"First Name\"), /*#__PURE__*/React.createElement(\"input\", Object.assign({\n    className: \"form-input\",\n    type: \"text\",\n    name: \"first_name\",\n    placeholder: \"Enter your First name\",\n    value: firstName\n  }, register(\"First\", {\n    required: {\n      value: true,\n      message: \"Please enter your First Name\"\n    },\n    pattern: {\n      value: /[A-Za-z]+$/,\n      message: \"Only Letters\"\n    },\n    pattern: {\n      value: /^[A-Z][a-z]+[,.'-]?(?: [A-Z][a-z]+[,.'-]?)*$/,\n      message: \"start with uppercase\"\n    },\n    minLength: {\n      value: 2,\n      message: \" must have at least 2 characters\"\n    }\n  }), {\n    onChange: e => setFirst_Name(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 13\n    }\n  })), errors.First && /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 255,\n      columnNumber: 34\n    }\n  }, errors.First.message)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-inputs\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 258,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n    icon: \"user\",\n    className: \"fa\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 259,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    className: \"form-labelx\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 260,\n      columnNumber: 13\n    }\n  }, \"Last Name\"), /*#__PURE__*/React.createElement(\"input\", Object.assign({\n    className: \"form-input\",\n    type: \"text\",\n    name: \"last_name\",\n    placeholder: \"Enter your Last name\",\n    value: lastName\n  }, register(\"Last\", {\n    required: {\n      value: true,\n      message: \"Please enter your Last Name\"\n    },\n    minLength: {\n      value: 2,\n      message: \" must have at least 2 characters\"\n    },\n    pattern: {\n      value: /[A-Za-z]+$/,\n      message: \"Only Letters\"\n    },\n    pattern: {\n      value: /^[A-Z][a-z]+[,.'-]?(?: [A-Z][a-z]+[,.'-]?)*$/,\n      message: \"start with uppercase\"\n    }\n  }), {\n    onChange: e => setLast_Name(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 262,\n      columnNumber: 13\n    }\n  })), errors.Last && /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 292,\n      columnNumber: 30\n    }\n  }, errors.Last.message)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-inputs\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 294,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n    icon: \"envelope\",\n    className: \"fa\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 295,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    className: \"form-labelx\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 296,\n      columnNumber: 13\n    }\n  }, \"Email\"), /*#__PURE__*/React.createElement(\"input\", Object.assign({\n    className: \"form-input\",\n    type: \"email\",\n    name: \"email\",\n    placeholder: \"Enter your email\"\n  }, register(\"email\", {\n    required: {\n      value: true,\n      message: \"Please enter your email address\"\n    },\n    pattern: {\n      value: /^(([^<>()[\\]\\\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/,\n      message: \"Invalid email address\"\n    }\n  }), {\n    value: email,\n    onChange: e => setEmail(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 297,\n      columnNumber: 13\n    }\n  })), errors.email && /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 316,\n      columnNumber: 38\n    }\n  }, errors.email.message)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-inputs\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 319,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"form-input-icon\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 320,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n    icon: \"calendar\",\n    className: \"fa\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 321,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(\"label\", {\n    className: \"form-labelx\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 324,\n      columnNumber: 13\n    }\n  }, \"Birthdate\"), /*#__PURE__*/React.createElement(\"input\", Object.assign({\n    type: \"date\",\n    className: \"form-input\",\n    placeholder: \"Enter BirthDate\",\n    value: birthDay\n  }, register(\"user\", {\n    required: true,\n    maxLength: 30\n  }), {\n    onChange: e => setBirth(e.target.value),\n    name: \"birthdate\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 325,\n      columnNumber: 13\n    }\n  })), errors.user && /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 334,\n      columnNumber: 30\n    }\n  }, \"BirthDate is Required\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-inputs\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 338,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n    icon: \"user\",\n    className: \"fa\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 339,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    className: \"form-labelx\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 340,\n      columnNumber: 13\n    }\n  }, \"Gender\"), /*#__PURE__*/React.createElement(\"input\", Object.assign({\n    className: \"form-input\",\n    type: \"text\",\n    name: \"gender\",\n    placeholder: \"Enter your gender\",\n    value: gender\n  }, register(\"user\", {\n    required: true,\n    maxLength: 30\n  }), {\n    onChange: e => setGender(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 342,\n      columnNumber: 13\n    }\n  })), errors.user && /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 351,\n      columnNumber: 34\n    }\n  }, \"Gender is Required\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-inputs\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 354,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n    icon: \"lock\",\n    className: \"fa\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 355,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    className: \"form-labelx\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 356,\n      columnNumber: 13\n    }\n  }, \"Password\"), /*#__PURE__*/React.createElement(\"input\", Object.assign({\n    className: \"form-input\",\n    name: \"passwordx\",\n    type: values.showPassword ? \"text\" : \"password\",\n    onChange: handlePasswordChange(\"password\"),\n    value: values.password,\n    endAdornment: /*#__PURE__*/React.createElement(InputAdornment, {\n      position: \"end\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 364,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(IconButton, {\n      onClick: handleClickShowPassword,\n      onMouseDown: handleMouseDownPassword,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 365,\n        columnNumber: 19\n      }\n    }, values.showPassword ? /*#__PURE__*/React.createElement(Visibility, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 369,\n        columnNumber: 44\n      }\n    }) : /*#__PURE__*/React.createElement(VisibilityOff, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 369,\n        columnNumber: 61\n      }\n    })))\n  }, register(\"passwordx\", {\n    required: \"You must specify a password\",\n    minLength: {\n      value: 8,\n      message: \"Password must have at least 8 characters\"\n    },\n    pattern: {\n      value: /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)[a-zA-Z\\d]{8,}$/,\n      message: \"must have at least one uppercase letter, one lowercase letter and one number \"\n    }\n  }), {\n    onChange: e => setPassword(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 357,\n      columnNumber: 13\n    }\n  })), errors.passwordx && /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 386,\n      columnNumber: 37\n    }\n  }, errors.passwordx.message)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-inputs\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 389,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n    icon: \"lock\",\n    className: \"fa\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 390,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    className: \"form-labelx\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 391,\n      columnNumber: 13\n    }\n  }, \"Confirm Password\"), /*#__PURE__*/React.createElement(\"input\", Object.assign({\n    className: \"form-input\",\n    name: \"password_repeat\",\n    type: \"password\"\n  }, register(\"password_repeat\", {\n    validate: value => value === passwordx.current || \"The passwords do not match\"\n  }), {\n    onChange: e => setRe_password(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 392,\n      columnNumber: 13\n    }\n  })), errors.password_repeat && /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 403,\n      columnNumber: 42\n    }\n  }, errors.password_repeat.message)), /*#__PURE__*/React.createElement(Button, {\n    className: \"form-input-btncc\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 406,\n      columnNumber: 9\n    }\n  }, \"Sign up\"), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"form-input-login\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 410,\n      columnNumber: 9\n    }\n  }, \"Already have an account? Login \", /*#__PURE__*/React.createElement(\"a\", {\n    href: \"/login\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 411,\n      columnNumber: 44\n    }\n  }, \"here\")))));\n};\n\nexport default Signup;","map":{"version":3,"sources":["C:/Users/BAZRA/Desktop/Bazra project/project react js/dashix/src/pages/signup.js"],"names":["React","useState","useEffect","useMemo","useRef","FontAwesomeIcon","useHistory","PhoneInput","scrollreveal","Form","Button","swal","useForm","IconButton","InputLabel","Visibility","InputAdornment","VisibilityOff","Input","Signup","values","setValues","password","showPassword","handleClickShowPassword","handleMouseDownPassword","event","preventDefault","handlePasswordChange","prop","target","value","register","handleSubmit","watch","formState","errors","onSubmit","data","console","log","handleClick","passwordx","current","sr","origin","distance","duration","reset","reveal","opacity","interval","history","login","push","agree","setAgree","firstName","setFirst_Name","lastName","setLast_Name","email","setEmail","setPassword","confirmPassword","setRe_password","country","setCountry","birthDay","setBirth","gender","setGender","role","setRole","phone","setPhone","app_user","setApp_user","username","setUsername","e","signupxx","checkboxHandler","warn","userinfo","item","options","method","headers","body","JSON","stringify","url","response","fetch","result","json","localStorage","setItem","ok","buttons","timer","error","display","justifyContent","alignItems","height","required","message","minLength","phonex","maxLength","pattern","countryx","First","Last","user","validate","password_repeat"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { useState, useEffect, useMemo  ,useRef } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { useHistory } from \"react-router-dom\";\nimport PhoneInput from \"react-phone-number-input\";\nimport \"react-phone-number-input/style.css\";\nimport \"../components/FontawsomeIcons\";\nimport scrollreveal from \"scrollreveal\";\nimport { Form, Button } from 'semantic-ui-react';\nimport swal from 'sweetalert';\nimport { useForm } from \"react-hook-form\";\nimport \"./Form1.css\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport Visibility from \"@material-ui/icons/Visibility\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\nimport VisibilityOff from \"@material-ui/icons/VisibilityOff\";\nimport Input from \"@material-ui/core/Input\";\nconst Signup = () => {\n  const [values, setValues] = React.useState({\n    password: \"\",\n    showPassword: false,\n  });\n  \n  const handleClickShowPassword = () => {\n    setValues({ ...values, showPassword: !values.showPassword });\n  };\n  \n  const handleMouseDownPassword = (event) => {\n    event.preventDefault();\n  };\n  \n  const handlePasswordChange = (prop) => (event) => {\n    setValues({ ...values, [prop]: event.target.value });\n  };\n  const { register, handleSubmit, watch,formState: { errors } } = useForm();\n    const onSubmit = (data) => {\n        console.log(data);\n        handleClick()\n       }\n       const passwordx = useRef({});\n       passwordx.current = watch(\"passwordx\", \"\");\n\n  useEffect(() => {\n    const sr = scrollreveal({\n      origin: \"top\",\n      distance: \"80px\",\n      duration: 2000,\n      reset: false,\n    });\n    sr.reveal(\n      `\n      .form-container \n    `,\n      {\n        opacity: 0,\n        interval: 100,\n      }\n    );\n  }, []);\n\n  const history = useHistory();\n\n  const login = () => {\n    history.push(\"/ver\");\n  };\n  const [agree, setAgree] = useState(false);\n  const [firstName, setFirst_Name] = useState(\"\");\n  const [lastName, setLast_Name] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [confirmPassword, setRe_password] = useState(\"\");\n  const [country, setCountry] = useState(\"\");\n  const [birthDay, setBirth] = useState(\"\");\n  const [gender, setGender] = useState(\"\");\n  const [role, setRole] = useState(\"\");\n  const [phone, setPhone] = useState();\n  const [app_user, setApp_user] = useState([]);\n  const [username , setUsername] = useState(\"\");\n\n  const handleClick = (e) => {\n   \n    signupxx()\n  \n    \n    \n  const checkboxHandler = () => {\n    // if agree === true, it will be set to false\n    // if agree === false, it will be set to true\n    // Don't miss the exclamation mark\n  };\n  async function signupxx(){\n \n    console.warn(username.password)\n    const userinfo = {\n      birthDay,\n      confirmPassword,\n      country,\n      email,\n      firstName,\n      gender,\n      lastName,\n      password,\n      username,\n     \n     \n    \n    };\n   \n    let item={birthDay,\n      confirmPassword,\n      country,\n      email,\n      firstName,\n      gender,\n      lastName,\n      password,\n      username,};\n   const options={\n        method:'POST',\n        headers:{\n  \n            'Content-Type':'application/json',\n            \"Accept\":\"application/json\",\n           \n           \n        },\n        body:JSON.stringify(item)\n        \n    }\n    const url =(\"http://localhost:8080/api/signup/user\")\n    try{\n     const response= await fetch(url,options);\n      const result =await response.json();\n     console.log(result);\n      localStorage.setItem(\"user-info\",JSON.stringify(result))\n      if(response.ok){\n        console.log(\"Signup successful\")\n        swal(\"Successful\", \"Welcom\", \"success\", {\n          buttons: false,\n          timer: 2000,\n        })\n        history.push(\"/login\")\n      }else{\n        console.log(\"failed\")\n      swal(\"Failed To Signup\", \"Error\", \"error\")\n      }\n      }catch(error) {\n        console.error(error);\n      }\n    }\n  }\n\n  return (\n    \n    <div\n      style={{\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        height: '90vh'\n      }}\n    >\n      \n        <div className='form-containerxx'>\n      \n\n    <form className=\"form\" onSubmit={handleSubmit(onSubmit)}>\n\n\n        <div className=\"form-inputs\">\n            <label className=\"form-labelx\">Phone Numer</label>\n            <PhoneInput\n              international\n              countryCallingCodeEditable={true}\n              \n              type=\"text\"\n              name=\"phonex\"\n              value={username}\n              {...register(\"phonex\", {\n                required: {\n                  value: true,\n                  message: \"Please Enter your Phone number\",\n                },\n                minLength: {\n                  value: 10,\n                  message: \" must have at least 10 characters\"\n                      },\n              })}\n            \n              onChange={setUsername}\n             \n            />\n\n{errors.phonex && <p >{errors.phonex.message}</p>}\n          </div>\n          \n          <div className=\"form-inputs\">\n            {/* country */}\n            <FontAwesomeIcon icon=\"globe\" className=\"fa\" />\n            <label className=\"form-labelx\">Country List</label>\n     \n\n<input\n  className=\"form-input\"\n  type=\"text\"\n  name=\"first_name\"\n  placeholder=\"Enter your Country\"\n\n  {...register(\"countryx\", { required: { value: true, maxLength: 30,message: \"Please Enter Country\",},\n  pattern: {\n    value:\n    /[A-Za-z]+$/,\n    message: \"Only Letters\",\n  }, },)}\n  value={country}\n  onChange={(e) => setCountry(e.target.value)}\n \n/>   {errors.countryx && <p >{errors.countryx.message}</p>}\n          </div>\n         \n          <div className=\"form-inputs\">\n            <FontAwesomeIcon icon=\"user\" className=\"fa\" />\n            <label className=\"form-labelx\">First Name</label>\n\n            <input\n              className=\"form-input\"\n              type=\"text\"\n              name=\"first_name\"\n              placeholder=\"Enter your First name\"\n              value={firstName}\n              {...register(\"First\", {\n                required: {\n                  value: true,\n                  message: \"Please enter your First Name\",\n                },\n                pattern: {\n                  value:\n                  /[A-Za-z]+$/,\n                  message: \"Only Letters\",\n                },\n                \n                pattern: {\n                  value:\n                  /^[A-Z][a-z]+[,.'-]?(?: [A-Z][a-z]+[,.'-]?)*$/,\n                  message: \"start with uppercase\",\n                },\n                minLength: {\n                  value: 2,\n                  message: \" must have at least 2 characters\"\n                      },\n              })}\n              onChange={(e) => setFirst_Name(e.target.value)}\n            />\n                {errors.First && <p >{errors.First.message}</p>}\n          </div>\n  \n          <div className=\"form-inputs\">\n            <FontAwesomeIcon icon=\"user\" className=\"fa\" />\n            <label className=\"form-labelx\">Last Name</label>\n\n            <input\n              className=\"form-input\"\n              type=\"text\"\n              name=\"last_name\"\n              placeholder=\"Enter your Last name\"\n              value={lastName}\n              {...register(\"Last\", {\n                required: {\n                  value: true,\n                  message: \"Please enter your Last Name\",\n                },\n                minLength: {\n                  value: 2,\n                  message: \" must have at least 2 characters\"\n                      },\n                      pattern: {\n                        value:\n                        /[A-Za-z]+$/,\n                        message: \"Only Letters\",\n                      },\n                      \n                \n                pattern: {\n                  value:\n                  /^[A-Z][a-z]+[,.'-]?(?: [A-Z][a-z]+[,.'-]?)*$/,\n                  message: \"start with uppercase\",\n                },\n              })}\n              onChange={(e) => setLast_Name(e.target.value)}\n            />\n             {errors.Last && <p >{errors.Last.message}</p>}\n          </div>\n          <div className=\"form-inputs\">\n            <FontAwesomeIcon icon=\"envelope\" className=\"fa\" />\n            <label className=\"form-labelx\">Email</label>\n            <input\n              className=\"form-input\"\n              type=\"email\"\n              name=\"email\"\n              placeholder=\"Enter your email\"\n              {...register(\"email\", {\n                required: {\n                  value: true,\n                  message: \"Please enter your email address\",\n                },\n                pattern: {\n                  value:\n                    /^(([^<>()[\\]\\\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/,\n                  message: \"Invalid email address\",\n                },\n              })}\n              value={email}\n              onChange={(e) => setEmail(e.target.value)}\n            />\n                    {errors.email && <p >{errors.email.message}</p>}\n          </div>\n  \n          <div className=\"form-inputs\">\n            <span className=\"form-input-icon\">\n              <FontAwesomeIcon icon=\"calendar\" className=\"fa\" />\n            </span>\n\n            <label className=\"form-labelx\">Birthdate</label>\n            <input\n              type=\"date\"\n              className=\"form-input\"\n              placeholder=\"Enter BirthDate\"\n              value={birthDay}\n              {...register(\"user\", { required: true, maxLength: 30 })}\n              onChange={(e) => setBirth(e.target.value)}\n              name=\"birthdate\"\n            />\n             {errors.user && <p >BirthDate is Required</p>}\n          </div>\n         \n          \n          <div className=\"form-inputs\">\n            <FontAwesomeIcon icon=\"user\" className=\"fa\" />\n            <label className=\"form-labelx\">Gender</label>\n\n            <input\n              className=\"form-input\"\n              type=\"text\"\n              name=\"gender\"\n              placeholder=\"Enter your gender\"\n              value={gender}\n              {...register(\"user\", { required: true, maxLength: 30 })}\n              onChange={(e) => setGender(e.target.value)}\n            />\n                 {errors.user && <p >Gender is Required</p>}\n          </div>\n         \n          <div className=\"form-inputs\">\n            <FontAwesomeIcon icon=\"lock\" className=\"fa\" />\n            <label className=\"form-labelx\">Password</label>\n            <input\n              className=\"form-input\"\n              name=\"passwordx\"\n              type={values.showPassword ? \"text\" : \"password\"}\n              onChange={handlePasswordChange(\"password\")}\n              value={values.password}\n              endAdornment={\n                <InputAdornment position=\"end\">\n                  <IconButton\n                    onClick={handleClickShowPassword}\n                    onMouseDown={handleMouseDownPassword}\n                  >\n                    {values.showPassword ? <Visibility /> : <VisibilityOff />}\n                  </IconButton>\n                </InputAdornment>}\n              {...register(\"passwordx\",{\n                required: \"You must specify a password\",\n               minLength: {\n            value: 8,\n            message: \"Password must have at least 8 characters\"\n                },\n                pattern: {\n                  value:\n                  /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)[a-zA-Z\\d]{8,}$/,\n                  message: \"must have at least one uppercase letter, one lowercase letter and one number \",\n                },})}\n             \n              onChange={(e) => setPassword(e.target.value)}\n            />\n               {errors.passwordx && <p>{errors.passwordx.message}</p>}\n          </div>\n     \n          <div className=\"form-inputs\">\n            <FontAwesomeIcon icon=\"lock\" className=\"fa\" />\n            <label className=\"form-labelx\">Confirm Password</label>\n            <input\n                className=\"form-input\"\n                name=\"password_repeat\"\n                type=\"password\"\n                 {...register(\"password_repeat\",{ validate: value =>\n                    value === passwordx.current || \"The passwords do not match\"\n                  })}\n            \n                  onChange={(e) =>  setRe_password(e.target.value)}\n                 \n            />\n              {errors.password_repeat && <p >{ errors.password_repeat.message}</p>}\n          </div>\n         \n        <Button className=\"form-input-btncc\"  \n           >\n        Sign up\n        </Button>\n        <span className=\"form-input-login\">\n            Already have an account? Login <a href=\"/login\">here</a>\n          </span>\n        </form>\n       \n      </div>\n      \n     \n    </div>\n    \n    \n    \n  );\n};\n\nexport default Signup;\n"]},"metadata":{},"sourceType":"module"}