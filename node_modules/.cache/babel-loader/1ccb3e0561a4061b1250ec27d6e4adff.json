{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nahom\\\\Desktop\\\\project\\\\New folder\\\\dashi\\\\src\\\\page2\\\\Qr.jsx\";\nimport React, { useState } from 'react';\nimport { QrReader } from 'react-qr-reader';\nexport default function Qr() {\n  const Test = props => {\n    const [data, setData] = useState('No result');\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(QrReader, {\n    onResult: (result, error) => {\n      if (!!result) {\n        setData(result === null || result === void 0 ? void 0 : result.text);\n      }\n\n      if (!!error) {\n        console.info(error);\n      }\n    },\n    style: {\n      width: '100%'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 5\n    }\n  }, data));\n}","map":{"version":3,"sources":["C:/Users/nahom/Desktop/project/New folder/dashi/src/page2/Qr.jsx"],"names":["React","useState","QrReader","Qr","Test","props","data","setData","result","error","text","console","info","width"],"mappings":";AAAA,OAAOA,KAAP,IAAcC,QAAd,QAA6B,OAA7B;AACA,SAASC,QAAT,QAAyB,iBAAzB;AAEA,eAAe,SAASC,EAAT,GAAc;AACzB,QAAMC,IAAI,GAAIC,KAAD,IAAW;AACpB,UAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBN,QAAQ,CAAC,WAAD,CAAhC;AACH,GAFD;;AAIF,sBAED,uDACG,oBAAC,QAAD;AACE,IAAA,QAAQ,EAAE,CAACO,MAAD,EAASC,KAAT,KAAmB;AAC3B,UAAI,CAAC,CAACD,MAAN,EAAc;AACZD,QAAAA,OAAO,CAACC,MAAD,aAACA,MAAD,uBAACA,MAAM,CAAEE,IAAT,CAAP;AACD;;AAED,UAAI,CAAC,CAACD,KAAN,EAAa;AACXE,QAAAA,OAAO,CAACC,IAAR,CAAaH,KAAb;AACD;AACF,KATH;AAUE,IAAA,KAAK,EAAE;AAAEI,MAAAA,KAAK,EAAE;AAAT,KAVT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADH,eAaG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIP,IAAJ,CAbH,CAFC;AAkBD","sourcesContent":["import React,{useState} from 'react'\r\nimport { QrReader } from 'react-qr-reader';\r\n\r\nexport default function Qr() {\r\n    const Test = (props) => {\r\n        const [data, setData] = useState('No result');\r\n    }\r\n    \r\n  return (\r\n      \r\n <>\r\n    <QrReader\r\n      onResult={(result, error) => {\r\n        if (!!result) {\r\n          setData(result?.text);\r\n        }\r\n\r\n        if (!!error) {\r\n          console.info(error);\r\n        }\r\n      }}\r\n      style={{ width: '100%' }}\r\n    />\r\n    <p>{data}</p>\r\n  </>\r\n  )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}